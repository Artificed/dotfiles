customCommands:
  - key: "C"
    command: 'git commit -m "{{ .Form.Type }}{{if .Form.Scopes}}({{ .Form.Scopes }}){{end}}: {{ .Form.Description }}"'
    description: "Commit with commitizen"
    context: "files"
    prompts:
      - type: "menu"
        title: "Select the type of change you are committing."
        key: "Type"
        options:
          - name: "Feature"
            description: "a new feature"
            value: "feat"
          - name: "Fix"
            description: "a bug fix"
            value: "fix"
          - name: "Docs"
            description: "Documentation only changes"
            value: "docs"
          - name: "Styles"
            description: "Changes that do not affect code meaning (e.g. formatting)"
            value: "style"
          - name: "Refactor"
            description: "A code change that neither fixes a bug nor adds a feature"
            value: "refactor"
          - name: "Performance"
            description: "A code change that improves performance"
            value: "perf"
          - name: "Tests"
            description: "Adding or correcting tests"
            value: "test"
          - name: "Builds"
            description: "Changes affecting the build system"
            value: "build"
          - name: "CI"
            description: "Changes to our CI configuration files and scripts"
            value: "ci"
          - name: "Chore"
            description: "Other changes that don't modify src or test files"
            value: "chore"
      - type: "input"
        title: "Enter the scope(s) of this change (optional)"
        key: "Scopes"
      - type: "input"
        title: "Enter the short description of the change"
        key: "Description"
      - type: "confirm"
        title: "Is the commit message correct?"
        body: "{{ .Form.Type }}{{if .Form.Scopes}}({{ .Form.Scopes }}){{end}}: {{ .Form.Description }}"

